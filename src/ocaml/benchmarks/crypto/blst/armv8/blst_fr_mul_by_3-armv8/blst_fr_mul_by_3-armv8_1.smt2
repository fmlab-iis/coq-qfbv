(set-logic QF_BV)
(set-info :smt-lib-version 2.0)
(declare-fun x9_4 () (_ BitVec 64))
(declare-fun x9_3 () (_ BitVec 64))
(declare-fun x9_2 () (_ BitVec 64))
(declare-fun x9_1 () (_ BitVec 64))
(declare-fun x8_4 () (_ BitVec 64))
(declare-fun x8_3 () (_ BitVec 64))
(declare-fun x8_2 () (_ BitVec 64))
(declare-fun x8_1 () (_ BitVec 64))
(declare-fun x3_2 () (_ BitVec 64))
(declare-fun x3_1 () (_ BitVec 64))
(declare-fun x2_2 () (_ BitVec 64))
(declare-fun x2_1 () (_ BitVec 64))
(declare-fun x17_2 () (_ BitVec 64))
(declare-fun x17_1 () (_ BitVec 64))
(declare-fun x16_2 () (_ BitVec 64))
(declare-fun x16_1 () (_ BitVec 64))
(declare-fun x11_4 () (_ BitVec 64))
(declare-fun x11_3 () (_ BitVec 64))
(declare-fun x11_2 () (_ BitVec 64))
(declare-fun x11_1 () (_ BitVec 64))
(declare-fun x10_4 () (_ BitVec 64))
(declare-fun x10_3 () (_ BitVec 64))
(declare-fun x10_2 () (_ BitVec 64))
(declare-fun x10_1 () (_ BitVec 64))
(declare-fun x1_2 () (_ BitVec 64))
(declare-fun x1_1 () (_ BitVec 64))
(declare-fun m3_0 () (_ BitVec 64))
(declare-fun m2_0 () (_ BitVec 64))
(declare-fun m1_0 () (_ BitVec 64))
(declare-fun m0_0 () (_ BitVec 64))
(declare-fun dontcare_2 () (_ BitVec 64))
(declare-fun dontcare_1 () (_ BitVec 64))
(declare-fun carry_18 () (_ BitVec 1))
(declare-fun carry_17 () (_ BitVec 1))
(declare-fun carry_16 () (_ BitVec 1))
(declare-fun carry_15 () (_ BitVec 1))
(declare-fun carry_14 () (_ BitVec 1))
(declare-fun carry_13 () (_ BitVec 1))
(declare-fun carry_12 () (_ BitVec 1))
(declare-fun carry_11 () (_ BitVec 1))
(declare-fun carry_10 () (_ BitVec 1))
(declare-fun carry_9 () (_ BitVec 1))
(declare-fun carry_8 () (_ BitVec 1))
(declare-fun carry_7 () (_ BitVec 1))
(declare-fun carry_6 () (_ BitVec 1))
(declare-fun carry_5 () (_ BitVec 1))
(declare-fun carry_4 () (_ BitVec 1))
(declare-fun carry_3 () (_ BitVec 1))
(declare-fun carry_2 () (_ BitVec 1))
(declare-fun carry_1 () (_ BitVec 1))
(declare-fun a3_0 () (_ BitVec 64))
(declare-fun a2_0 () (_ BitVec 64))
(declare-fun a1_0 () (_ BitVec 64))
(declare-fun a0_0 () (_ BitVec 64))
(assert (and (and (and (and (= m0_0 #xFFFFFFFF00000001) (= m1_0 #x53BDA402FFFE5BFE)) (= m2_0 #x3339D80809A1D805)) (= m3_0 #x73EDA753299D7D48)) (bvult (bvadd (bvmul ((_ zero_extend 192) a0_0) #x0000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 192) a1_0) #x0000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 192) a2_0) #x0000000000000000000000000000000100000000000000000000000000000000) (bvmul ((_ zero_extend 192) a3_0) #x0000000000000001000000000000000000000000000000000000000000000000)))) (bvadd (bvmul ((_ zero_extend 192) m0_0) #x0000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 192) m1_0) #x0000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 192) m2_0) #x0000000000000000000000000000000100000000000000000000000000000000) (bvmul ((_ zero_extend 192) m3_0) #x0000000000000001000000000000000000000000000000000000000000000000)))))))
(assert (and (= carry_1 ((_ extract 64 64) (bvadd ((_ zero_extend 1) a0_0) ((_ zero_extend 1) a0_0)))) (= x8_1 ((_ extract 63 0) (bvadd ((_ zero_extend 1) a0_0) ((_ zero_extend 1) a0_0))))))
(assert (and (= carry_2 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) a1_0) ((_ zero_extend 1) a1_0)) ((_ zero_extend 64) carry_1)))) (= x9_1 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) a1_0) ((_ zero_extend 1) a1_0)) ((_ zero_extend 64) carry_1))))))
(assert (and (= carry_3 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) a2_0) ((_ zero_extend 1) a2_0)) ((_ zero_extend 64) carry_2)))) (= x10_1 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) a2_0) ((_ zero_extend 1) a2_0)) ((_ zero_extend 64) carry_2))))))
(assert (and (= carry_4 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) a3_0) ((_ zero_extend 1) a3_0)) ((_ zero_extend 64) carry_3)))) (= x11_1 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) a3_0) ((_ zero_extend 1) a3_0)) ((_ zero_extend 64) carry_3))))))
(assert (= x3_1 (bvadd (bvadd #x0000000000000000 #x0000000000000000) ((_ zero_extend 63) carry_4))))
(assert (and (= carry_5 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x8_1) ((_ zero_extend 1) (bvnot m0_0))) #b00000000000000000000000000000000000000000000000000000000000000001))) (= x16_1 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x8_1) ((_ zero_extend 1) (bvnot m0_0))) #b00000000000000000000000000000000000000000000000000000000000000001)))))
(assert (and (= carry_6 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x9_1) ((_ zero_extend 1) (bvnot m1_0))) ((_ zero_extend 64) carry_5)))) (= x17_1 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x9_1) ((_ zero_extend 1) (bvnot m1_0))) ((_ zero_extend 64) carry_5))))))
(assert (and (= carry_7 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x10_1) ((_ zero_extend 1) (bvnot m2_0))) ((_ zero_extend 64) carry_6)))) (= x1_1 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x10_1) ((_ zero_extend 1) (bvnot m2_0))) ((_ zero_extend 64) carry_6))))))
(assert (and (= carry_8 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x11_1) ((_ zero_extend 1) (bvnot m3_0))) ((_ zero_extend 64) carry_7)))) (= x2_1 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x11_1) ((_ zero_extend 1) (bvnot m3_0))) ((_ zero_extend 64) carry_7))))))
(assert (and (= carry_9 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x3_1) ((_ zero_extend 1) (bvnot #x0000000000000000))) ((_ zero_extend 64) carry_8)))) (= dontcare_1 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x3_1) ((_ zero_extend 1) (bvnot #x0000000000000000))) ((_ zero_extend 64) carry_8))))))
(assert (= x8_2 (ite (= carry_9 #b1) x16_1 x8_1)))
(assert (= x9_2 (ite (= carry_9 #b1) x17_1 x9_1)))
(assert (= x10_2 (ite (= carry_9 #b1) x1_1 x10_1)))
(assert (= x11_2 (ite (= carry_9 #b1) x2_1 x11_1)))
(assert (and (= carry_10 ((_ extract 64 64) (bvadd ((_ zero_extend 1) x8_2) ((_ zero_extend 1) a0_0)))) (= x8_3 ((_ extract 63 0) (bvadd ((_ zero_extend 1) x8_2) ((_ zero_extend 1) a0_0))))))
(assert (and (= carry_11 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x9_2) ((_ zero_extend 1) a1_0)) ((_ zero_extend 64) carry_10)))) (= x9_3 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x9_2) ((_ zero_extend 1) a1_0)) ((_ zero_extend 64) carry_10))))))
(assert (and (= carry_12 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x10_2) ((_ zero_extend 1) a2_0)) ((_ zero_extend 64) carry_11)))) (= x10_3 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x10_2) ((_ zero_extend 1) a2_0)) ((_ zero_extend 64) carry_11))))))
(assert (and (= carry_13 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x11_2) ((_ zero_extend 1) a3_0)) ((_ zero_extend 64) carry_12)))) (= x11_3 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x11_2) ((_ zero_extend 1) a3_0)) ((_ zero_extend 64) carry_12))))))
(assert (= x3_2 (bvadd (bvadd #x0000000000000000 #x0000000000000000) ((_ zero_extend 63) carry_13))))
(assert (and (= carry_14 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x8_3) ((_ zero_extend 1) (bvnot m0_0))) #b00000000000000000000000000000000000000000000000000000000000000001))) (= x16_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x8_3) ((_ zero_extend 1) (bvnot m0_0))) #b00000000000000000000000000000000000000000000000000000000000000001)))))
(assert (and (= carry_15 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x9_3) ((_ zero_extend 1) (bvnot m1_0))) ((_ zero_extend 64) carry_14)))) (= x17_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x9_3) ((_ zero_extend 1) (bvnot m1_0))) ((_ zero_extend 64) carry_14))))))
(assert (and (= carry_16 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x10_3) ((_ zero_extend 1) (bvnot m2_0))) ((_ zero_extend 64) carry_15)))) (= x1_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x10_3) ((_ zero_extend 1) (bvnot m2_0))) ((_ zero_extend 64) carry_15))))))
(assert (and (= carry_17 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x11_3) ((_ zero_extend 1) (bvnot m3_0))) ((_ zero_extend 64) carry_16)))) (= x2_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x11_3) ((_ zero_extend 1) (bvnot m3_0))) ((_ zero_extend 64) carry_16))))))
(assert (and (= carry_18 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) x3_2) ((_ zero_extend 1) (bvnot #x0000000000000000))) ((_ zero_extend 64) carry_17)))) (= dontcare_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) x3_2) ((_ zero_extend 1) (bvnot #x0000000000000000))) ((_ zero_extend 64) carry_17))))))
(assert (= x8_4 (ite (= carry_18 #b1) x16_2 x8_3)))
(assert (= x9_4 (ite (= carry_18 #b1) x17_2 x9_3)))
(assert (= x10_4 (ite (= carry_18 #b1) x1_2 x10_3)))
(assert (= x11_4 (ite (= carry_18 #b1) x2_2 x11_3)))
(assert (not (= (bvurem (bvadd (bvmul ((_ zero_extend 256) x8_4) #x00000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 256) x9_4) #x00000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 256) x10_4) #x00000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 256) x11_4) #x00000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 256) #x0000000000000000) #x00000000000000010000000000000000000000000000000000000000000000000000000000000000))))) (bvadd (bvmul ((_ zero_extend 256) m0_0) #x00000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 256) m1_0) #x00000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 256) m2_0) #x00000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 256) m3_0) #x00000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 256) #x0000000000000000) #x00000000000000010000000000000000000000000000000000000000000000000000000000000000)))))) (bvurem (bvmul (bvadd (bvmul ((_ zero_extend 256) a0_0) #x00000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 256) a1_0) #x00000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 256) a2_0) #x00000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 256) a3_0) #x00000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 256) #x0000000000000000) #x00000000000000010000000000000000000000000000000000000000000000000000000000000000))))) (bvadd (bvmul ((_ zero_extend 256) #x0000000000000003) #x00000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 256) #x0000000000000000) #x00000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 256) #x0000000000000000) #x00000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 256) #x0000000000000000) #x00000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 256) #x0000000000000000) #x00000000000000010000000000000000000000000000000000000000000000000000000000000000)))))) (bvadd (bvmul ((_ zero_extend 256) m0_0) #x00000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 256) m1_0) #x00000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 256) m2_0) #x00000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 256) m3_0) #x00000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 256) #x0000000000000000) #x00000000000000010000000000000000000000000000000000000000000000000000000000000000)))))))))
(check-sat)
(exit)
