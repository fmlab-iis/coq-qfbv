(set-logic QF_BV)
(set-info :smt-lib-version 2.0)
(declare-fun rsi_2 () (_ BitVec 64))
(declare-fun rdx_2 () (_ BitVec 64))
(declare-fun rcx_2 () (_ BitVec 64))
(declare-fun rbx_2 () (_ BitVec 64))
(declare-fun rbp_2 () (_ BitVec 64))
(declare-fun rax_2 () (_ BitVec 64))
(declare-fun r9_3 () (_ BitVec 64))
(declare-fun r9_2 () (_ BitVec 64))
(declare-fun r8_3 () (_ BitVec 64))
(declare-fun r8_2 () (_ BitVec 64))
(declare-fun r13_3 () (_ BitVec 64))
(declare-fun r13_2 () (_ BitVec 64))
(declare-fun r12_3 () (_ BitVec 64))
(declare-fun r12_2 () (_ BitVec 64))
(declare-fun r11_3 () (_ BitVec 64))
(declare-fun r11_2 () (_ BitVec 64))
(declare-fun r10_3 () (_ BitVec 64))
(declare-fun r10_2 () (_ BitVec 64))
(declare-fun carry_12 () (_ BitVec 1))
(declare-fun carry_11 () (_ BitVec 1))
(declare-fun carry_10 () (_ BitVec 1))
(declare-fun carry_9 () (_ BitVec 1))
(declare-fun carry_8 () (_ BitVec 1))
(declare-fun carry_7 () (_ BitVec 1))
(declare-fun carry_6 () (_ BitVec 1))
(declare-fun carry_5 () (_ BitVec 1))
(declare-fun carry_4 () (_ BitVec 1))
(declare-fun carry_3 () (_ BitVec 1))
(declare-fun carry_2 () (_ BitVec 1))
(declare-fun carry_1 () (_ BitVec 1))
(declare-fun b5_0 () (_ BitVec 64))
(declare-fun b4_0 () (_ BitVec 64))
(declare-fun b3_0 () (_ BitVec 64))
(declare-fun b2_0 () (_ BitVec 64))
(declare-fun b1_0 () (_ BitVec 64))
(declare-fun b0_0 () (_ BitVec 64))
(declare-fun a5_0 () (_ BitVec 64))
(declare-fun a4_0 () (_ BitVec 64))
(declare-fun a3_0 () (_ BitVec 64))
(declare-fun a2_0 () (_ BitVec 64))
(declare-fun a1_0 () (_ BitVec 64))
(declare-fun a0_0 () (_ BitVec 64))
(assert (and (bvult (bvadd (bvmul ((_ zero_extend 320) a0_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) a1_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) a2_0) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) a3_0) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) a4_0) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) a5_0) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))) (bvadd (bvmul ((_ zero_extend 320) #xB9FEFFFFFFFFAAAB) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) #x1EABFFFEB153FFFF) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x6730D2A0F6B0F624) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x64774B84F38512BF) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x4B1BA7B6434BACD7) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) #x1A0111EA397FE69A) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000))))))) (bvult (bvadd (bvmul ((_ zero_extend 320) b0_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) b1_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) b2_0) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) b3_0) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) b4_0) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) b5_0) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))) (bvadd (bvmul ((_ zero_extend 320) #xB9FEFFFFFFFFAAAB) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) #x1EABFFFEB153FFFF) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x6730D2A0F6B0F624) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x64774B84F38512BF) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x4B1BA7B6434BACD7) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) #x1A0111EA397FE69A) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))))))
(assert (and (= carry_1 ((_ extract 64 64) (bvadd ((_ zero_extend 1) b0_0) ((_ zero_extend 1) a0_0)))) (= r8_2 ((_ extract 63 0) (bvadd ((_ zero_extend 1) b0_0) ((_ zero_extend 1) a0_0))))))
(assert (and (= carry_2 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b1_0) ((_ zero_extend 1) a1_0)) ((_ zero_extend 64) carry_1)))) (= r9_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b1_0) ((_ zero_extend 1) a1_0)) ((_ zero_extend 64) carry_1))))))
(assert (and (= carry_3 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b2_0) ((_ zero_extend 1) a2_0)) ((_ zero_extend 64) carry_2)))) (= r10_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b2_0) ((_ zero_extend 1) a2_0)) ((_ zero_extend 64) carry_2))))))
(assert (and (= carry_4 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b3_0) ((_ zero_extend 1) a3_0)) ((_ zero_extend 64) carry_3)))) (= r11_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b3_0) ((_ zero_extend 1) a3_0)) ((_ zero_extend 64) carry_3))))))
(assert (and (= carry_5 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b4_0) ((_ zero_extend 1) a4_0)) ((_ zero_extend 64) carry_4)))) (= r12_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b4_0) ((_ zero_extend 1) a4_0)) ((_ zero_extend 64) carry_4))))))
(assert (and (= carry_6 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b5_0) ((_ zero_extend 1) a5_0)) ((_ zero_extend 64) carry_5)))) (= r13_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b5_0) ((_ zero_extend 1) a5_0)) ((_ zero_extend 64) carry_5))))))
(assert true)
(assert true)
(assert (and (= carry_7 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r8_2) ((_ zero_extend 1) #xB9FEFFFFFFFFAAAB)))) (= rax_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r8_2) ((_ zero_extend 1) #xB9FEFFFFFFFFAAAB))))))
(assert (and (= carry_8 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r9_2) (bvadd ((_ zero_extend 1) #x1EABFFFEB153FFFF) ((_ zero_extend 64) carry_7))))) (= rcx_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r9_2) (bvadd ((_ zero_extend 1) #x1EABFFFEB153FFFF) ((_ zero_extend 64) carry_7)))))))
(assert (and (= carry_9 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r10_2) (bvadd ((_ zero_extend 1) #x6730D2A0F6B0F624) ((_ zero_extend 64) carry_8))))) (= rdx_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r10_2) (bvadd ((_ zero_extend 1) #x6730D2A0F6B0F624) ((_ zero_extend 64) carry_8)))))))
(assert (and (= carry_10 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r11_2) (bvadd ((_ zero_extend 1) #x64774B84F38512BF) ((_ zero_extend 64) carry_9))))) (= rsi_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r11_2) (bvadd ((_ zero_extend 1) #x64774B84F38512BF) ((_ zero_extend 64) carry_9)))))))
(assert (and (= carry_11 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r12_2) (bvadd ((_ zero_extend 1) #x4B1BA7B6434BACD7) ((_ zero_extend 64) carry_10))))) (= rbx_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r12_2) (bvadd ((_ zero_extend 1) #x4B1BA7B6434BACD7) ((_ zero_extend 64) carry_10)))))))
(assert (and (= carry_12 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r13_2) (bvadd ((_ zero_extend 1) #x1A0111EA397FE69A) ((_ zero_extend 64) carry_11))))) (= rbp_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r13_2) (bvadd ((_ zero_extend 1) #x1A0111EA397FE69A) ((_ zero_extend 64) carry_11)))))))
(assert (= r8_3 (ite (= carry_12 #b1) r8_2 rax_2)))
(assert (= r9_3 (ite (= carry_12 #b1) r9_2 rcx_2)))
(assert (= r10_3 (ite (= carry_12 #b1) r10_2 rdx_2)))
(assert (= r11_3 (ite (= carry_12 #b1) r11_2 rsi_2)))
(assert (= r12_3 (ite (= carry_12 #b1) r12_2 rbx_2)))
(assert (= r13_3 (ite (= carry_12 #b1) r13_2 rbp_2)))
(assert (not (= (bvurem (bvadd (bvmul ((_ zero_extend 320) r8_3) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) r9_3) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) r10_3) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) r11_3) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) r12_3) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) r13_3) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))) (bvadd (bvmul ((_ zero_extend 320) #xB9FEFFFFFFFFAAAB) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) #x1EABFFFEB153FFFF) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x6730D2A0F6B0F624) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x64774B84F38512BF) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x4B1BA7B6434BACD7) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) #x1A0111EA397FE69A) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000))))))) (bvurem (bvadd (bvadd (bvmul ((_ zero_extend 320) a0_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) a1_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) a2_0) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) a3_0) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) a4_0) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) a5_0) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))) (bvadd (bvmul ((_ zero_extend 320) b0_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) b1_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) b2_0) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) b3_0) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) b4_0) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) b5_0) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000))))))) (bvadd (bvmul ((_ zero_extend 320) #xB9FEFFFFFFFFAAAB) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) #x1EABFFFEB153FFFF) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x6730D2A0F6B0F624) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x64774B84F38512BF) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x4B1BA7B6434BACD7) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) #x1A0111EA397FE69A) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000))))))))))
(check-sat)
(exit)
