(set-logic QF_BV)
(set-info :smt-lib-version 2.0)
(declare-fun rsi_4 () (_ BitVec 64))
(declare-fun rsi_2 () (_ BitVec 64))
(declare-fun rdx_4 () (_ BitVec 64))
(declare-fun rdx_2 () (_ BitVec 64))
(declare-fun rcx_4 () (_ BitVec 64))
(declare-fun rcx_2 () (_ BitVec 64))
(declare-fun rbx_4 () (_ BitVec 64))
(declare-fun rbx_2 () (_ BitVec 64))
(declare-fun rbp_4 () (_ BitVec 64))
(declare-fun rbp_2 () (_ BitVec 64))
(declare-fun rax_4 () (_ BitVec 64))
(declare-fun rax_2 () (_ BitVec 64))
(declare-fun r9_6 () (_ BitVec 64))
(declare-fun r9_5 () (_ BitVec 64))
(declare-fun r9_3 () (_ BitVec 64))
(declare-fun r9_2 () (_ BitVec 64))
(declare-fun r8_6 () (_ BitVec 64))
(declare-fun r8_5 () (_ BitVec 64))
(declare-fun r8_3 () (_ BitVec 64))
(declare-fun r8_2 () (_ BitVec 64))
(declare-fun r13_6 () (_ BitVec 64))
(declare-fun r13_5 () (_ BitVec 64))
(declare-fun r13_3 () (_ BitVec 64))
(declare-fun r13_2 () (_ BitVec 64))
(declare-fun r12_6 () (_ BitVec 64))
(declare-fun r12_5 () (_ BitVec 64))
(declare-fun r12_3 () (_ BitVec 64))
(declare-fun r12_2 () (_ BitVec 64))
(declare-fun r11_6 () (_ BitVec 64))
(declare-fun r11_5 () (_ BitVec 64))
(declare-fun r11_3 () (_ BitVec 64))
(declare-fun r11_2 () (_ BitVec 64))
(declare-fun r10_6 () (_ BitVec 64))
(declare-fun r10_5 () (_ BitVec 64))
(declare-fun r10_3 () (_ BitVec 64))
(declare-fun r10_2 () (_ BitVec 64))
(declare-fun carry_22 () (_ BitVec 1))
(declare-fun carry_21 () (_ BitVec 1))
(declare-fun carry_20 () (_ BitVec 1))
(declare-fun carry_19 () (_ BitVec 1))
(declare-fun carry_18 () (_ BitVec 1))
(declare-fun carry_17 () (_ BitVec 1))
(declare-fun carry_16 () (_ BitVec 1))
(declare-fun carry_15 () (_ BitVec 1))
(declare-fun carry_14 () (_ BitVec 1))
(declare-fun carry_13 () (_ BitVec 1))
(declare-fun carry_12 () (_ BitVec 1))
(declare-fun carry_11 () (_ BitVec 1))
(declare-fun carry_10 () (_ BitVec 1))
(declare-fun carry_9 () (_ BitVec 1))
(declare-fun carry_8 () (_ BitVec 1))
(declare-fun carry_7 () (_ BitVec 1))
(declare-fun carry_6 () (_ BitVec 1))
(declare-fun carry_5 () (_ BitVec 1))
(declare-fun carry_4 () (_ BitVec 1))
(declare-fun carry_3 () (_ BitVec 1))
(declare-fun carry_2 () (_ BitVec 1))
(declare-fun carry_1 () (_ BitVec 1))
(declare-fun b2_5_0 () (_ BitVec 64))
(declare-fun b2_4_0 () (_ BitVec 64))
(declare-fun b2_3_0 () (_ BitVec 64))
(declare-fun b2_2_0 () (_ BitVec 64))
(declare-fun b2_1_0 () (_ BitVec 64))
(declare-fun b2_0_0 () (_ BitVec 64))
(declare-fun b1_5_0 () (_ BitVec 64))
(declare-fun b1_4_0 () (_ BitVec 64))
(declare-fun b1_3_0 () (_ BitVec 64))
(declare-fun b1_2_0 () (_ BitVec 64))
(declare-fun b1_1_0 () (_ BitVec 64))
(declare-fun b1_0_0 () (_ BitVec 64))
(declare-fun a2_5_0 () (_ BitVec 64))
(declare-fun a2_4_0 () (_ BitVec 64))
(declare-fun a2_3_0 () (_ BitVec 64))
(declare-fun a2_2_0 () (_ BitVec 64))
(declare-fun a2_1_0 () (_ BitVec 64))
(declare-fun a2_0_0 () (_ BitVec 64))
(declare-fun a1_5_0 () (_ BitVec 64))
(declare-fun a1_4_0 () (_ BitVec 64))
(declare-fun a1_3_0 () (_ BitVec 64))
(declare-fun a1_2_0 () (_ BitVec 64))
(declare-fun a1_1_0 () (_ BitVec 64))
(declare-fun a1_0_0 () (_ BitVec 64))
(assert (and (and (and (bvult (bvadd (bvmul ((_ zero_extend 320) a1_0_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) a1_1_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) a1_2_0) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) a1_3_0) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) a1_4_0) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) a1_5_0) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))) (bvadd (bvmul ((_ zero_extend 320) #xB9FEFFFFFFFFAAAB) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) #x1EABFFFEB153FFFF) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x6730D2A0F6B0F624) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x64774B84F38512BF) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x4B1BA7B6434BACD7) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) #x1A0111EA397FE69A) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000))))))) (bvult (bvadd (bvmul ((_ zero_extend 320) b1_0_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) b1_1_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) b1_2_0) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) b1_3_0) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) b1_4_0) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) b1_5_0) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))) (bvadd (bvmul ((_ zero_extend 320) #xB9FEFFFFFFFFAAAB) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) #x1EABFFFEB153FFFF) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x6730D2A0F6B0F624) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x64774B84F38512BF) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x4B1BA7B6434BACD7) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) #x1A0111EA397FE69A) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))))) (bvult (bvadd (bvmul ((_ zero_extend 320) a2_0_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) a2_1_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) a2_2_0) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) a2_3_0) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) a2_4_0) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) a2_5_0) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))) (bvadd (bvmul ((_ zero_extend 320) #xB9FEFFFFFFFFAAAB) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) #x1EABFFFEB153FFFF) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x6730D2A0F6B0F624) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x64774B84F38512BF) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x4B1BA7B6434BACD7) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) #x1A0111EA397FE69A) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))))) (bvult (bvadd (bvmul ((_ zero_extend 320) b2_0_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) b2_1_0) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) b2_2_0) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) b2_3_0) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) b2_4_0) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) b2_5_0) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))) (bvadd (bvmul ((_ zero_extend 320) #xB9FEFFFFFFFFAAAB) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) #x1EABFFFEB153FFFF) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x6730D2A0F6B0F624) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x64774B84F38512BF) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x4B1BA7B6434BACD7) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) #x1A0111EA397FE69A) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))))))
(assert (and (= carry_1 ((_ extract 64 64) (bvadd ((_ zero_extend 1) b2_0_0) ((_ zero_extend 1) a2_0_0)))) (= r8_2 ((_ extract 63 0) (bvadd ((_ zero_extend 1) b2_0_0) ((_ zero_extend 1) a2_0_0))))))
(assert (and (= carry_2 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b2_1_0) ((_ zero_extend 1) a2_1_0)) ((_ zero_extend 64) carry_1)))) (= r9_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b2_1_0) ((_ zero_extend 1) a2_1_0)) ((_ zero_extend 64) carry_1))))))
(assert (and (= carry_3 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b2_2_0) ((_ zero_extend 1) a2_2_0)) ((_ zero_extend 64) carry_2)))) (= r10_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b2_2_0) ((_ zero_extend 1) a2_2_0)) ((_ zero_extend 64) carry_2))))))
(assert (and (= carry_4 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b2_3_0) ((_ zero_extend 1) a2_3_0)) ((_ zero_extend 64) carry_3)))) (= r11_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b2_3_0) ((_ zero_extend 1) a2_3_0)) ((_ zero_extend 64) carry_3))))))
(assert (and (= carry_5 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b2_4_0) ((_ zero_extend 1) a2_4_0)) ((_ zero_extend 64) carry_4)))) (= r12_2 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b2_4_0) ((_ zero_extend 1) a2_4_0)) ((_ zero_extend 64) carry_4))))))
(assert (= r13_2 (bvadd (bvadd b2_5_0 a2_5_0) ((_ zero_extend 63) carry_5))))
(assert (and (= carry_6 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r8_2) ((_ zero_extend 1) #xB9FEFFFFFFFFAAAB)))) (= rax_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r8_2) ((_ zero_extend 1) #xB9FEFFFFFFFFAAAB))))))
(assert (and (= carry_7 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r9_2) (bvadd ((_ zero_extend 1) #x1EABFFFEB153FFFF) ((_ zero_extend 64) carry_6))))) (= rcx_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r9_2) (bvadd ((_ zero_extend 1) #x1EABFFFEB153FFFF) ((_ zero_extend 64) carry_6)))))))
(assert (and (= carry_8 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r10_2) (bvadd ((_ zero_extend 1) #x6730D2A0F6B0F624) ((_ zero_extend 64) carry_7))))) (= rdx_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r10_2) (bvadd ((_ zero_extend 1) #x6730D2A0F6B0F624) ((_ zero_extend 64) carry_7)))))))
(assert (and (= carry_9 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r11_2) (bvadd ((_ zero_extend 1) #x64774B84F38512BF) ((_ zero_extend 64) carry_8))))) (= rsi_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r11_2) (bvadd ((_ zero_extend 1) #x64774B84F38512BF) ((_ zero_extend 64) carry_8)))))))
(assert (and (= carry_10 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r12_2) (bvadd ((_ zero_extend 1) #x4B1BA7B6434BACD7) ((_ zero_extend 64) carry_9))))) (= rbx_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r12_2) (bvadd ((_ zero_extend 1) #x4B1BA7B6434BACD7) ((_ zero_extend 64) carry_9)))))))
(assert (and (= carry_11 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r13_2) (bvadd ((_ zero_extend 1) #x1A0111EA397FE69A) ((_ zero_extend 64) carry_10))))) (= rbp_2 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r13_2) (bvadd ((_ zero_extend 1) #x1A0111EA397FE69A) ((_ zero_extend 64) carry_10)))))))
(assert (= r8_3 (ite (= carry_11 #b1) r8_2 rax_2)))
(assert (= r9_3 (ite (= carry_11 #b1) r9_2 rcx_2)))
(assert (= r10_3 (ite (= carry_11 #b1) r10_2 rdx_2)))
(assert (= r11_3 (ite (= carry_11 #b1) r11_2 rsi_2)))
(assert (= r12_3 (ite (= carry_11 #b1) r12_2 rbx_2)))
(assert (= r13_3 (ite (= carry_11 #b1) r13_2 rbp_2)))
(assert (and (= carry_12 ((_ extract 64 64) (bvadd ((_ zero_extend 1) b1_0_0) ((_ zero_extend 1) a1_0_0)))) (= r8_5 ((_ extract 63 0) (bvadd ((_ zero_extend 1) b1_0_0) ((_ zero_extend 1) a1_0_0))))))
(assert (and (= carry_13 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b1_1_0) ((_ zero_extend 1) a1_1_0)) ((_ zero_extend 64) carry_12)))) (= r9_5 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b1_1_0) ((_ zero_extend 1) a1_1_0)) ((_ zero_extend 64) carry_12))))))
(assert (and (= carry_14 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b1_2_0) ((_ zero_extend 1) a1_2_0)) ((_ zero_extend 64) carry_13)))) (= r10_5 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b1_2_0) ((_ zero_extend 1) a1_2_0)) ((_ zero_extend 64) carry_13))))))
(assert (and (= carry_15 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b1_3_0) ((_ zero_extend 1) a1_3_0)) ((_ zero_extend 64) carry_14)))) (= r11_5 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b1_3_0) ((_ zero_extend 1) a1_3_0)) ((_ zero_extend 64) carry_14))))))
(assert (and (= carry_16 ((_ extract 64 64) (bvadd (bvadd ((_ zero_extend 1) b1_4_0) ((_ zero_extend 1) a1_4_0)) ((_ zero_extend 64) carry_15)))) (= r12_5 ((_ extract 63 0) (bvadd (bvadd ((_ zero_extend 1) b1_4_0) ((_ zero_extend 1) a1_4_0)) ((_ zero_extend 64) carry_15))))))
(assert (= r13_5 (bvadd (bvadd b1_5_0 a1_5_0) ((_ zero_extend 63) carry_16))))
(assert (and (= carry_17 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r8_5) ((_ zero_extend 1) #xB9FEFFFFFFFFAAAB)))) (= rax_4 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r8_5) ((_ zero_extend 1) #xB9FEFFFFFFFFAAAB))))))
(assert (and (= carry_18 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r9_5) (bvadd ((_ zero_extend 1) #x1EABFFFEB153FFFF) ((_ zero_extend 64) carry_17))))) (= rcx_4 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r9_5) (bvadd ((_ zero_extend 1) #x1EABFFFEB153FFFF) ((_ zero_extend 64) carry_17)))))))
(assert (and (= carry_19 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r10_5) (bvadd ((_ zero_extend 1) #x6730D2A0F6B0F624) ((_ zero_extend 64) carry_18))))) (= rdx_4 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r10_5) (bvadd ((_ zero_extend 1) #x6730D2A0F6B0F624) ((_ zero_extend 64) carry_18)))))))
(assert (and (= carry_20 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r11_5) (bvadd ((_ zero_extend 1) #x64774B84F38512BF) ((_ zero_extend 64) carry_19))))) (= rsi_4 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r11_5) (bvadd ((_ zero_extend 1) #x64774B84F38512BF) ((_ zero_extend 64) carry_19)))))))
(assert (and (= carry_21 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r12_5) (bvadd ((_ zero_extend 1) #x4B1BA7B6434BACD7) ((_ zero_extend 64) carry_20))))) (= rbx_4 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r12_5) (bvadd ((_ zero_extend 1) #x4B1BA7B6434BACD7) ((_ zero_extend 64) carry_20)))))))
(assert (and (= carry_22 ((_ extract 64 64) (bvsub ((_ zero_extend 1) r13_5) (bvadd ((_ zero_extend 1) #x1A0111EA397FE69A) ((_ zero_extend 64) carry_21))))) (= rbp_4 ((_ extract 63 0) (bvsub ((_ zero_extend 1) r13_5) (bvadd ((_ zero_extend 1) #x1A0111EA397FE69A) ((_ zero_extend 64) carry_21)))))))
(assert (= r8_6 (ite (= carry_22 #b1) r8_5 rax_4)))
(assert (= r9_6 (ite (= carry_22 #b1) r9_5 rcx_4)))
(assert (= r10_6 (ite (= carry_22 #b1) r10_5 rdx_4)))
(assert (= r11_6 (ite (= carry_22 #b1) r11_5 rsi_4)))
(assert (= r12_6 (ite (= carry_22 #b1) r12_5 rbx_4)))
(assert (= r13_6 (ite (= carry_22 #b1) r13_5 rbp_4)))
(assert (not (bvult (bvadd (bvmul ((_ zero_extend 320) r8_6) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) r9_6) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) r10_6) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) r11_6) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) r12_6) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) r13_6) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))) (bvadd (bvmul ((_ zero_extend 320) #xB9FEFFFFFFFFAAAB) #x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001) (bvadd (bvmul ((_ zero_extend 320) #x1EABFFFEB153FFFF) #x000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x6730D2A0F6B0F624) #x000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x64774B84F38512BF) #x000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000) (bvadd (bvmul ((_ zero_extend 320) #x4B1BA7B6434BACD7) #x000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000) (bvmul ((_ zero_extend 320) #x1A0111EA397FE69A) #x000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000)))))))))
(check-sat)
(exit)
